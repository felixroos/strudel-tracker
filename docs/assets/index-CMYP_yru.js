import{n as f,t as P1,d as e1,m as b1,a as N1,b as $1,g as Pm,c as Q,e as A1,f as n1,h as _1,i as r1,j as R,k as w1,l as o1,o as a1,p as h,q as i1,r as C1,s as S1,u as T1,v as em,w as nm,x as V1,y as rm,z as om,A as am,B as im,C as sm,D as k1,E as cm,F as dm,G as O1,H as um,I as fm,J as I1,K as F1,L as z1,M as E1,N as lm,O as hm,P as gm,Q as pm,R as vm,S as b,T as ym,U as bm,V as Nm,W as $m,X as Am,Y as _m,Z as wm,_ as Cm,$ as Sm,a0 as Tm,a1 as Vm,a2 as km,a3 as Om,a4 as Im,a5 as Fm,a6 as zm,a7 as z,a8 as Em,a9 as _,aa as D1,ab as u1,ac as W,ad as Y,ae as j1,af as N,ag as R1}from"./index-D453dgsi.js";import"https://DrSnuggles.github.io/chiptune/chiptune3.js";var f1=(m,M)=>Array(M+1).join(m),Dm=/^(_{1,}|=|\^{1,}|)([abcdefgABCDEFG])([,']*)$/;function B1(m){const M=Dm.exec(m);return M?[M[1],M[2],M[3]]:["","",""]}function D(m){const[M,t,P]=B1(m);if(t==="")return"";let e=4;for(let r=0;r<P.length;r++)e+=P.charAt(r)===","?-1:1;const n=M[0]==="_"?M.replace(/_/g,"b"):M[0]==="^"?M.replace(/\^/g,"#"):"";return t.charCodeAt(0)>96?t.toUpperCase()+n+(e+1):t+n+e}function x1(m){const M=f(m);if(M.empty||!M.oct&&M.oct!==0)return"";const{letter:t,acc:P,oct:e}=M,n=P[0]==="b"?P.replace(/b/g,"_"):P.replace(/#/g,"^"),r=e>4?t.toLowerCase():t,o=e===5?"":e>4?f1("'",e-5):f1(",",4-e);return n+r+o}function jm(m,M){return x1(P1(D(m),M))}function Rm(m,M){return e1(D(m),D(M))}var Bm={abcToScientificNotation:D,scientificToAbcNotation:x1,tokenize:B1,transpose:jm,distance:Rm};function xm(m,M){const t=[];for(;M--;t[M]=M+m);return t}function Gm(m,M){const t=[];for(;M--;t[M]=m-M);return t}function qm(m,M){return m<M?xm(m,M-m+1):Gm(m,m-M+1)}function Hm(m,M){const t=M.length,P=(m%t+t)%t;return M.slice(P,t).concat(M.slice(0,P))}function Lm(m){return m.filter(M=>M===0||M)}function G1(m){return m.map(t=>f(t)).filter(t=>!t.empty).sort((t,P)=>t.height-P.height).map(t=>t.name)}function Um(m){return G1(m).filter((M,t,P)=>t===0||M!==P[t-1])}function Jm(m,M=Math.random){let t,P,e=m.length;for(;e;)t=Math.floor(M()*e--),P=m[e],m[e]=m[t],m[t]=P;return m}function q1(m){return m.length===0?[[]]:q1(m.slice(1)).reduce((M,t)=>M.concat(m.map((P,e)=>{const n=t.slice();return n.splice(e,0,m[0]),n})),[])}const Km=Object.freeze(Object.defineProperty({__proto__:null,compact:Lm,permutations:q1,range:qm,rotate:Hm,shuffle:Jm,sortedNoteNames:G1,sortedUniqNoteNames:Um},Symbol.toStringTag,{value:"Module"}));var Xm=m=>{const M=m.reduce((t,P)=>{const e=f(P).chroma;return e!==void 0&&(t[e]=t[e]||f(P).name),t},{});return t=>M[t]};function Qm(m,M={}){const t=m.map(e=>f(e).pc).filter(e=>e);return f.length===0?[]:PM(t,1,M).filter(e=>e.weight).sort((e,n)=>n.weight-e.weight).map(e=>e.name)}var B={anyThirds:384,perfectFifth:16,nonPerfectFifths:40,anySeventh:3},x=m=>M=>!!(M&m),Wm=x(B.anyThirds),Ym=x(B.perfectFifth),Zm=x(B.anySeventh),mM=x(B.nonPerfectFifths);function MM(m){const M=parseInt(m.chroma,2);return Wm(M)&&Ym(M)&&Zm(M)}function tM(m){const M=parseInt(m,2);return mM(M)?m:(M|16).toString(2)}function PM(m,M,t){const P=m[0],e=f(P).chroma,n=Xm(m),r=b1(m,!1),o=[];return r.forEach((a,i)=>{const s=t.assumePerfectFifth&&tM(a);N1().filter(d=>t.assumePerfectFifth&&MM(d)?d.chroma===s:d.chroma===a).forEach(d=>{const u=d.aliases[0],g=n(i);i!==e?o.push({weight:.5*M,name:`${g}${u}/${P}`}):o.push({weight:1*M,name:`${g}${u}`})})}),o}var Z={empty:!0,name:"",symbol:"",root:"",rootDegree:0,type:"",tonic:null,setNum:NaN,quality:"Unknown",chroma:"",normalized:"",aliases:[],notes:[],intervals:[]};function s1(m){const[M,t,P,e]=$1(m);return M===""?["",m]:M==="A"&&e==="ug"?["","aug"]:[M+t,P+e]}function $(m){if(m==="")return Z;if(Array.isArray(m)&&m.length===2)return E(m[1],m[0]);{const[M,t]=s1(m),P=E(t,M);return P.empty?E(m):P}}function E(m,M,t){const P=Pm(m),e=Q(M||""),n=Q(t||"");if(P.empty||M&&e.empty||t&&n.empty)return Z;const r=A1(e.pc,n.pc),o=P.intervals.indexOf(r)+1;if(!n.empty&&!o)return Z;const a=Array.from(P.intervals);for(let d=1;d<o;d++){const u=a[0][0],g=a[0][1],y=parseInt(u,10)+7;a.push(`${y}${g}`),a.shift()}const i=e.empty?[]:a.map(d=>n1(e,d));m=P.aliases.indexOf(m)!==-1?m:P.aliases[0];const s=`${e.empty?"":e.pc}${m}${n.empty||o<=1?"":"/"+n.pc}`,c=`${M?e.pc+" ":""}${P.name}${o>1&&t?" over "+n.pc:""}`;return{...P,name:c,symbol:s,type:P.name,root:n.name,intervals:a,rootDegree:o,tonic:e.name,notes:i}}var eM=_1("Chord.chord","Chord.get",$);function nM(m,M){const[t,P]=s1(m);return t?n1(t,M)+P:m}function rM(m){const M=$(m),t=r1(M.chroma);return R().filter(P=>t(P.chroma)).map(P=>P.name)}function oM(m){const M=$(m),t=r1(M.chroma);return w1().filter(P=>t(P.chroma)).map(P=>M.tonic+P.aliases[0])}function aM(m){const M=$(m),t=o1(M.chroma);return w1().filter(P=>t(P.chroma)).map(P=>M.tonic+P.aliases[0])}function iM(m){const{intervals:M,tonic:t}=$(m),P=a1(M,t);return e=>e?P(e>0?e-1:e):""}function sM(m){const{intervals:M,tonic:t}=$(m);return a1(M,t)}var cM={getChord:E,get:$,detect:Qm,chordScales:rM,extended:oM,reduced:aM,tokenize:s1,transpose:nM,degrees:iM,steps:sM,chord:eM};function dM(){return"1P 2M 3M 4P 5P 6m 7m".split(" ")}var H1=h,uM=m=>h(m).name,fM=m=>h(m).semitones,lM=m=>h(m).q,hM=m=>h(m).num;function gM(m){const M=h(m);return M.empty?"":M.simple+M.q}function pM(m){const M=h(m);if(M.empty)return"";const t=(7-M.step)%7,P=M.type==="perfectable"?-M.alt:-(M.alt+1);return h({step:t,alt:P,oct:M.oct,dir:M.dir}).name}var vM=[1,2,2,3,3,4,5,5,6,6,7,7],yM="P m M m M P d P m M m M".split(" ");function bM(m){const M=m<0?-1:1,t=Math.abs(m),P=t%12,e=Math.floor(t/12);return M*(vM[P]+7*e)+yM[P]}var NM=e1,L1=U1((m,M)=>[m[0]+M[0],m[1]+M[1]]),$M=m=>M=>L1(m,M),AM=U1((m,M)=>[m[0]-M[0],m[1]-M[1]]);function _M(m,M){const t=H1(m);if(t.empty)return"";const[P,e,n]=t.coord;return i1([P+M,e,n]).name}var S={names:dM,get:H1,name:uM,num:hM,semitones:fM,quality:lM,fromSemitones:bM,distance:NM,invert:pM,simplify:gM,add:L1,addTo:$M,substract:AM,transposeFifths:_M};function U1(m){return(M,t)=>{const P=h(M).coord,e=h(t).coord;if(P&&e){const n=m(P,e);return i1(n).name}}}function wM(m){const[M,t,P,e]=C1(m);return M===""?U("",m):M==="A"&&e==="ug"?U("","aug"):U(M+t,P+e)}function U(m,M){const t=M.split("/");if(t.length===1)return[m,t[0],""];const[P,e,n,r]=C1(t[1]);return P!==""&&n===""&&r===""?[m,t[0],P+e]:[m,M,""]}function CM(m,M){return M.map(S1).map(P=>P1(m,T1(P))+P.chordType)}function SM(m,M){return M.map(t=>{const[P,e]=wM(t),n=e1(m,P);return S1(T1(n)).name+e})}var TM={fromRomanNumerals:CM,toRomanNumerals:SM};function J1(m){const M=em(m.map(t=>typeof t=="number"?t:nm(t)));return!m.length||M.length!==m.length?[]:M.reduce((t,P)=>{const e=t[t.length-1];return t.concat(V1(e,P).slice(1))},[M[0]])}function VM(m,M){return J1(m).map(t=>rm(t,M))}var kM={numeric:J1,chromatic:VM},OM={empty:!0,name:"",type:"",tonic:null,setNum:NaN,chroma:"",normalized:"",aliases:[],notes:[],intervals:[]};function K1(m){if(typeof m!="string")return["",""];const M=m.indexOf(" "),t=f(m.substring(0,M));if(t.empty){const e=f(m);return e.empty?["",m]:[e.name,""]}const P=m.substring(t.name.length+1).toLowerCase();return[t.name,P.length?P:""]}var IM=om;function v(m){const M=Array.isArray(m)?m:K1(m),t=f(M[0]).name,P=am(M[1]);if(P.empty)return OM;const e=P.name,n=t?P.intervals.map(o=>P1(t,o)):[],r=t?t+" "+e:e;return{...P,name:r,type:e,tonic:t,notes:n}}var FM=im("Scale.scale","Scale.get",v);function zM(m,M={}){const t=sm(m),P=f(M.tonic??m[0]??""),e=P.chroma;if(e===void 0)return[];const n=t.split("");n[e]="1";const r=k1(e,n).join(""),o=R().find(i=>i.chroma===r),a=[];return o&&a.push(P.name+" "+o.name),M.match==="exact"||X1(r).forEach(i=>{a.push(P.name+" "+i)}),a}function EM(m){const M=v(m),t=o1(M.chroma);return N1().filter(P=>t(P.chroma)).map(P=>P.aliases[0])}function X1(m){const M=cm(m)?m:v(m).chroma,t=r1(M);return R().filter(P=>t(P.chroma)).map(P=>P.name)}function DM(m){const M=o1(v(m).chroma);return R().filter(t=>M(t.chroma)).map(t=>t.name)}function Q1(m){const M=m.map(e=>f(e).pc).filter(e=>e),t=M[0],P=dm(M);return k1(P.indexOf(t),P)}function jM(m){const M=v(m);if(M.empty)return[];const t=M.tonic?M.notes:M.intervals;return b1(M.chroma).map((P,e)=>{const n=v(P).name;return n?[t[e],n]:["",""]}).filter(P=>P[0])}function RM(m){const M=Array.isArray(m)?Q1(m):v(m).notes,t=M.map(P=>f(P).chroma);return P=>{const e=typeof P=="number"?f(um(P)):f(P),n=e.height;if(n===void 0)return;const r=n%12,o=t.indexOf(r);if(o!==-1)return fm(e.name,M[o])}}function BM(m){const M=RM(m);return(t,P)=>{const e=f(t).height,n=f(P).height;return e===void 0||n===void 0?[]:V1(e,n).map(M).filter(r=>r)}}function xM(m){const{intervals:M,tonic:t}=v(m),P=O1(M,t);return e=>e?P(e>0?e-1:e):""}function GM(m){const{intervals:M,tonic:t}=v(m);return O1(M,t)}var A={degrees:xM,detect:zM,extended:X1,get:v,modeNames:jM,names:IM,rangeOf:BM,reduced:DM,scaleChords:EM,scaleNotes:Q1,steps:GM,tokenize:K1,scale:FM},qM={empty:!0,name:"",upper:void 0,lower:void 0,type:void 0,additive:[]},HM=["4/4","3/4","2/4","2/2","12/8","9/8","6/8","3/8"];function LM(){return HM.slice()}var UM=/^(\d*\d(?:\+\d)*)\/(\d+)$/,l1=new Map;function JM(m){const M=JSON.stringify(m),t=l1.get(M);if(t)return t;const P=QM(c1(m));return l1.set(M,P),P}function c1(m){if(typeof m=="string"){const[n,r,o]=UM.exec(m)||[];return c1([r,o])}const[M,t]=m,P=+t;if(typeof M=="number")return[M,P];const e=M.split("+").map(n=>+n);return e.length===1?[e[0],P]:[e,P]}var KM={names:LM,parse:c1,get:JM},XM=m=>Math.log(m)/Math.log(2)%1===0;function QM([m,M]){const t=Array.isArray(m)?m.reduce((o,a)=>o+a,0):m,P=M;if(t===0||P===0)return qM;const e=Array.isArray(m)?`${m.join("+")}/${M}`:`${m}/${M}`,n=Array.isArray(m)?m:[],r=P===4||P===2?"simple":P===8&&t%3===0?"compound":XM(P)?"irregular":"irrational";return{empty:!1,name:e,type:r,upper:t,lower:P,additive:n}}var WM=I1,YM=F1,ZM=z1,mt=E1;const Mt=Object.freeze(Object.defineProperty({__proto__:null,AbcNotation:Bm,Array:Km,Chord:cM,ChordDictionary:ZM,ChordType:z1,Collection:lm,Core:I1,DurationValue:hm,Interval:S,Key:gm,Midi:pm,Mode:vm,Note:b,PcSet:YM,Pcset:F1,Progression:TM,Range:kM,RomanNumeral:ym,Scale:A,ScaleDictionary:mt,ScaleType:E1,TimeSignature:KM,Tonal:WM,accToAlt:bm,altToAcc:Nm,chroma:$m,coordToInterval:i1,coordToNote:Am,coordinates:_m,deprecate:_1,distance:A1,fillStr:wm,height:Cm,interval:h,isNamed:Sm,isNamedPitch:Tm,isPitch:Vm,midi:km,note:Q,pitch:Om,stepToLetter:Im,tokenizeInterval:Fm,tokenizeNote:$1,tonicIntervalsTransposer:a1,transpose:n1},Symbol.toStringTag,{value:"Module"}));var W1={},J={},T={};T.__esModule=!0;T.getBestVoicing=void 0;function tt(m){var M=m.chord,t=m.range,P=m.finder,e=m.picker,n=m.lastVoicing,r=P(M,t);return r.length?e(r,n):[]}T.getBestVoicing=tt;var w={};const Y1=zm(Mt);var V={};V.__esModule=!0;V.tokenizeChord=void 0;function Pt(m){var M=(m||"").match(/^([A-G][b#]*)([^\/]*)[\/]?([A-G][b#]*)?$/);return M?M.slice(1):[]}V.tokenizeChord=Pt;var h1;function et(){if(h1)return w;h1=1,w.__esModule=!0,w.voicingsInRange=void 0;var m=Y1,M=Z1(),t=V;function P(e,n,r){n===void 0&&(n=M.lefthand),r===void 0&&(r=["D3","A4"]);var o=(0,t.tokenizeChord)(e),a=o[0],i=o[1];if(!n[i])return[];var s=n[i].map(function(d){return d.split(" ")}),c=m.Range.chromatic(r);return s.reduce(function(d,u){var g=u.map(function(l){return m.Interval.substract(l,u[0])}),y=m.Note.transpose(a,u[0]),O=c.filter(function(l){return m.Note.chroma(l)===m.Note.chroma(y)}).filter(function(l){return m.Note.midi(m.Note.transpose(l,g[g.length-1]))<=m.Note.midi(r[1])}).map(function(l){return m.Note.enharmonic(l,y)}),I=O.map(function(l){return g.map(function(q){return m.Note.transpose(l,q)})});return d.concat(I)},[])}return w.voicingsInRange=P,w}var g1;function Z1(){return g1||(g1=1,function(m){var M=z&&z.__assign||function(){return M=Object.assign||function(o){for(var a,i=1,s=arguments.length;i<s;i++){a=arguments[i];for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(o[c]=a[c])}return o},M.apply(this,arguments)},t=z&&z.__rest||function(o,a){var i={};for(var s in o)Object.prototype.hasOwnProperty.call(o,s)&&a.indexOf(s)<0&&(i[s]=o[s]);if(o!=null&&typeof Object.getOwnPropertySymbols=="function")for(var c=0,s=Object.getOwnPropertySymbols(o);c<s.length;c++)a.indexOf(s[c])<0&&Object.prototype.propertyIsEnumerable.call(o,s[c])&&(i[s[c]]=o[s[c]]);return i};m.__esModule=!0,m.dictionaryVoicing=m.dictionaryVoicingFinder=m.triads=m.guidetones=m.lefthand=void 0;var P=T,e=et();m.lefthand={m7:["3m 5P 7m 9M","7m 9M 10m 12P"],7:["3M 6M 7m 9M","7m 9M 10M 13M"],"^7":["3M 5P 7M 9M","7M 9M 10M 12P"],69:["3M 5P 6A 9M"],m7b5:["3m 5d 7m 8P","7m 8P 10m 12d"],"7b9":["3M 6m 7m 9m","7m 9m 10M 13m"],"7b13":["3M 6m 7m 9m","7m 9m 10M 13m"],o7:["1P 3m 5d 6M","5d 6M 8P 10m"],"7#11":["7m 9M 11A 13A"],"7#9":["3M 7m 9A"],mM7:["3m 5P 7M 9M","7M 9M 10m 12P"],m6:["3m 5P 6M 9M","6M 9M 10m 12P"]},m.guidetones={m7:["3m 7m","7m 10m"],m9:["3m 7m","7m 10m"],7:["3M 7m","7m 10M"],"^7":["3M 7M","7M 10M"],"^9":["3M 7M","7M 10M"],69:["3M 6M"],6:["3M 6M","6M 10M"],m7b5:["3m 7m","7m 10m"],"7b9":["3M 7m","7m 10M"],"7b13":["3M 7m","7m 10M"],o7:["3m 6M","6M 10m"],"7#11":["3M 7m","7m 10M"],"7#9":["3M 7m","7m 10M"],mM7:["3m 7M","7M 10m"],m6:["3m 6M","6M 10m"]},m.triads={M:["1P 3M 5P","3M 5P 8P","5P 8P 10M"],m:["1P 3m 5P","3m 5P 8P","5P 8P 10m"],o:["1P 3m 5d","3m 5d 8P","5d 8P 10m"],aug:["1P 3m 5A","3m 5A 8P","5A 8P 10m"]};var n=function(o){return function(a,i){return(0,e.voicingsInRange)(a,o,i)}};m.dictionaryVoicingFinder=n;var r=function(o){var a=o.dictionary,i=o.range,s=t(o,["dictionary","range"]);return(0,P.getBestVoicing)(M(M({},s),{range:i,finder:(0,m.dictionaryVoicingFinder)(a)}))};m.dictionaryVoicing=r}(J)),J}var G={};G.__esModule=!0;G.minTopNoteDiff=void 0;var p1=Y1;function nt(m,M){if(!M)return m[0];var t=function(P){return Math.abs(p1.Note.midi(M[M.length-1])-p1.Note.midi(P[P.length-1]))};return m.reduce(function(P,e){return t(e)<t(P)?e:P},m[0])}G.minTopNoteDiff=nt;(function(m){m.__esModule=!0;var M=Z1(),t=G,P=T,e=V;m.default={tokenizeChord:e.tokenizeChord,getBestVoicing:P.getBestVoicing,dictionaryVoicing:M.dictionaryVoicing,dictionaryVoicingFinder:M.dictionaryVoicingFinder,lefthand:M.lefthand,guidetones:M.guidetones,triads:M.triads,minTopNoteDiff:t.minTopNoteDiff}})(W1);const v1=Em(W1),rt=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],ot=["c","db","d","eb","e","f","gb","g","ab","a","bb","b"],at=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],it={b:-1,"#":1},st=m=>{const[M,...t]=m.split("");return ot.indexOf(M.toLowerCase())+t.reduce((P,e)=>P+it[e],0)};function ct(m){const M=(m||"").match(/^([A-G][b#]*)([^/]*)[/]?([A-G][b#]*)?$/);return M?M.slice(1):[]}const m1=m=>m%12,mm=m=>{let M=Number(m);return isNaN(M)?S.semitones(m):M},M1=(m,M)=>{if(typeof m=="number")return m;if(typeof m=="string")return R1(m,M)},dt=(m,M=!1)=>{const t=Math.floor(m/12)-1;return(M?at:rt)[m%12]+t};function ut(m,M,t=1){m=m.map(e=>typeof e=="string"?R1(e):e);const P=Math.floor(M/m.length)*t*12;return M=N(M,m.length),m[M]+P}function ft(m,M,t){let P=0,e=1/0;return M.forEach((n,r)=>{const o=Math.abs(n-m);(o<e||t)&&(P=r,e=o)}),P}let K={};function lt(m,M,t,P){let[e,n]=A.tokenize(M);const r=M1(e),o=m1(r);if(!K[n]){let{intervals:c}=A.get(`C ${n}`);K[n]=c.map(mm)}const a=K[n];if(!a)return null;let i=r;if(t){t=M1(t,3);const c=m1(t),d=N(c-o,12),u=ft(d,a,P);m=m+u,i=t-d}const s=Math.floor(m/a.length)*12;return m=N(m,a.length),a[m]+i+s}let y1={below:m=>m.slice(-1)[0],duck:m=>m.slice(-1)[0],above:m=>m[0],root:m=>m[0]};function ht({chord:m,dictionary:M,offset:t=0,n:P,mode:e="below",anchor:n="c5",octaves:r=1}){const[o,a]=ct(m),i=st(o);n=M1((n==null?void 0:n.note)||n,4);const s=m1(n),c=M[a].map(p=>(typeof p=="string"?p.split(" "):p).map(mm));let d,u,g=c.map((p,H)=>{const tm=y1[e](p),L=N(s-tm-i,12);return(d===void 0||L<d)&&(d=L,u=H),L});e==="root"&&(u=0);const y=Math.ceil(t/c.length)*12,O=N(u+t,c.length),I=c[O],l=y1[e](I),q=n-g[O]+y,d1=I.map(p=>q-l+p);let F=d1.map(p=>dt(p));return e==="duck"&&(F=F.filter((p,H)=>d1[H]!==n)),P!==void 0?[ut(F,P,r)]:F}const gt=m=>(m<=0?-1:1)+m*7+"P";function pt(m,M){M=M.replaceAll(":"," "),m=Math.ceil(m);let{intervals:t,tonic:P,empty:e}=A.get(M);if(e&&D1(M)||!e&&!P)throw new Error('incomplete scale. Make sure to use ":" instead of spaces, example: .scale("C:major")');if(e)throw new Error(`invalid scale "${M}"`);P=P||"C";const{pc:n,oct:r=3}=b.get(P),o=Math.floor(m/t.length),a=N(m,t.length),i=S.add(t[a],gt(o));return b.transpose(n+r,i)}function vt(m,M,t){let[P,e]=A.tokenize(m),{notes:n}=A.get(`${P} ${e}`);if(n=n.map(u=>b.get(u).pc),M=Number(M),isNaN(M))throw new Error(`scale offset "${M}" not a number`);const{pc:r,oct:o=3}=b.get(t),a=n.indexOf(r);if(a===-1)throw new Error(`note "${t}" is not in scale "${m}"`);let i=a,s=o,c=r;const d=Math.sign(M);for(;Math.abs(i-a)<Math.abs(M);){i+=d;const u=N(i,n.length);d<0&&c[0]==="C"&&(s+=d),c=n[u],d>0&&c[0]==="C"&&(s+=d)}return c+s}const Vt=_("transpose",function(m,M){return M.withHap(t=>{const P=isNaN(Number(m))?String(m):S.fromSemitones(m);if(typeof t.value=="number"){const e=typeof P=="string"?S.semitones(P)||0:P;return t.withValue(()=>t.value+e)}return t.withValue(()=>b.simplify(b.transpose(t.value,P)))})}),kt=_("scaleTranspose",function(m,M){return M.withHap(t=>{if(!t.context.scale)throw new Error("can only use scaleTranspose after .scale");if(typeof t.value!="string")throw new Error("can only use scaleTranspose with notes");return t.withValue(()=>vt(t.context.scale,Number(m),t.value))})}),Ot=_("scale",function(m,M){return Array.isArray(m)&&(m=m.flat().join(" ")),M.fmap(t=>{const P=typeof t=="object";let e=P?t.n:t;if(P&&delete t.n,D1(e))return u1(e);const n=Number(e);if(isNaN(n))return W(`[tonal] invalid scale step "${e}", expected number`,"error"),Y;try{let r;t.anchor?r=lt(n,m,t.anchor):r=pt(n,m),t=u1(P?{...t,note:r}:r)}catch(r){W(`[tonal] ${r.message}`,"error"),t=Y}return t}).outerJoin().withHap(t=>t.setContext({...t.context,scale:m}))}),C={2:["1P 5P 8P 9M","1P 5P 8P 9M 12P","5P 8P 9M 12P"],5:["1P 5P 8P 12P","5P 8P 12P 15P"],6:["1P 5P 6M 8P 10M","1P 5P 8P 10M 13M","3M 5P 8P 10M 13M","5P 8P 10M 12P 13M"],7:["1P 5P 7m 8P 10M","1P 7m 8P 10M 12P","3M 7m 8P 10M 12P","3M 7m 8P 10M 14m","3M 7m 10M 12P 15P","7m 10M 12P 14m 15P","7m 10M 12P 15P 17M"],9:["1P 5P 7m 9M 10M","1P 7m 9M 10M 12P","3M 7m 8P 9M 12P","7m 9M 10M 14m 15P","3M 7m 8P 12P 16M","7m 10M 12P 15P 16M"],11:["1P 5P 7m 9M 11P","5P 7m 8P 9M 11P","7m 8P 9M 11P 12P","7m 8P 11P 12P 16M"],13:["1P 6M 7m 9M 10M","1P 7m 9M 10M 13M","3M 7m 8P 9M 13M","7m 8P 9M 10M 13M","7m 9M 10M 13M 15P"],69:["1P 5P 6M 9M 10M","1P 5P 9M 10M 13M","3M 5P 8P 9M 13M","5P 8P 9M 10M 13M"],add9:["1P 5P 8P 9M 10M","1P 5P 9M 10M 12P","3M 8P 9M 10M 12P","3M 8P 9M 12P 15P","5P 8P 9M 12P 17M"],"+":["1P 3M 6m 8P 10M","1P 6m 8P 10M 13m","3M 6m 8P 10M 13m","3M 8P 10M 13m 15P","6m 8P 10M 13m 15P","6m 10M 13m 15P 17M"],o:["1P 5d 8P 10m 12d","3m 8P 10m 12d 15P","5d 8P 10m 12d 15P"],h:["3m 5d 7m 8P 10m","1P 5d 7m 10m 12d","3m 7m 8P 10m 12d","3m 7m 8P 12d 14m","5d 7m 8P 10m 14m","5d 8P 10m 12d 14m","7m 10m 12d 14m 15P","5d 8P 10m 14m 17m"],sus:["1P 4P 5P 8P","1P 4P 5P 8P 11P","5P 8P 11P 12P","5P 8P 11P 12P 15P"],"^":["1P 5P 8P 10M","1P 5P 8P 10M 12P","3M 5P 8P 10M 12P","3M 8P 10M 12P 15P","5P 8P 10M 12P 15P"],"-":["1P 3m 5P 8P 10m","1P 5P 8P 10m 12P","3m 5P 8P 10m 12P","5P 8P 10m 12P 15P"],"^7":["1P 5P 7M 10M 12P","1P 10M 12P 14M","3M 8P 10M 12P 14M","5P 8P 10M 12P 14M","5P 8P 10M 14M 17M"],"-7":["1P 3m 5P 7m 10m","1P 5P 7m 10m 12P","3m 7m 8P 10m 12P","3m 7m 8P 10m 14m","5P 7m 8P 10m 14m","7m 10m 12P 14m 15P","5P 8P 10m 14m 17m","7m 10m 12P 15P 17m"],"7sus":["1P 5P 7m 8P 11P","5P 8P 11P 12P 14m","7m 8P 11P 12P 14m","7m 11P 12P 14m 18P"],h7:["3m 5d 7m 8P 10m","1P 5d 7m 10m 12d","1P 7m 10m 12d","3m 7m 8P 10m 12d","3m 7m 8P 12d 14m","5d 7m 8P 10m 14m","5d 8P 10m 12d 14m","7m 10m 12d 14m 15P","5d 8P 10m 14m 17m"],o7:["1P 6M 8P 10m 12d","1P 6M 10m 12d 13M","3m 8P 10m 12d 13M","3m 8P 12d 13M 15P","5d 10m 12d 13M 15P","5d 10m 13M 15P 17m","6M 12d 13M 15P 17m","6M 12d 15P 17m 19d"],"^9":["1P 5P 7M 9M 10M","1P 7M 9M 10M 12P","3M 7M 8P 9M 12P","3M 7M 8P 12P 16M","5P 8P 10M 14M 16M","7M 8P 10M 12P 16M"],"^13":["1P 6M 7M 9M 10M","1P 7M 9M 10M 13M","3M 7M 8P 9M 13M","3M 7M 8P 13M 16M","7M 8P 10M 13M 16M"],"^7#11":["1P 5P 7M 10M 12d","3M 7M 8P 10M 12d","1P 7M 10M 12d 14M","3M 7M 8P 12d 14M","5P 8P 10M 12d 14M"],"^9#11":["1P 3M 5d 7M 9M","1P 7M 9M 10M 12d","3M 7M 8P 9M 12d","3M 8P 9M 12d 14M"],"^7#5":["1P 6m 7M 10M 13m","3M 7M 8P 10M 13m","6m 7M 8P 10M 13m"],"-6":["1P 3m 5P 6M 8P","1P 5P 6M 8P 10m","3m 5P 6M 8P 10m","1P 5P 8P 10m 13M","3m 5P 8P 10m 13M","5P 8P 10m 12P 13M","5P 8P 10m 13M 15P"],"-69":["1P 3m 5P 6M 9M","3m 5P 6M 8P 9M","3m 6M 9M 10m 12P","1P 5P 9M 10m 13M","3m 5P 8P 9M 13M","5P 8P 9M 10m 13M","5P 8P 10m 13M 16M"],"-^7":["1P 3m 5P 7M 10m","1P 5P 7M 10m 12P","3m 7M 8P 10m 12P","5P 7M 8P 10m 14M","5P 8P 10m 14M 17m"],"-^9":["1P 3m 5P 7M 9M","1P 7M 9M 10m 12P","3m 7M 8P 9M 12P","5P 8P 9M 10m 14M"],"-9":["1P 3m 5P 7m 9M","3m 5P 7m 8P 9M","3m 7m 8P 9M 12P","5P 8P 9M 10m 14m","3m 7m 9M 12P 15P","7m 10m 12P 15P 16M"],"-add9":["1P 2M 3m 5P 8P","1P 3m 5P 9M","3m 5P 8P 9M 12P","5P 8P 9M 10m 12P"],"-11":["1P 3m 7m 9M 11P","3m 7m 8P 9M 11P","1P 4P 7m 10m 12P","5P 8P 11P 14m","3m 7m 9M 11P 15P","5P 8P 11P 14m 16M","7m 10m 12P 15P 18P"],"-7b5":["3m 5d 7m 8P 10m","1P 7m 10m 12d","1P 5d 7m 10m 12d","3m 7m 8P 10m 12d","3m 7m 8P 12d 14m","5d 7m 8P 10m 14m","5d 8P 10m 12d 14m","7m 10m 12d 14m 15P","5d 8P 10m 14m 17m"],h9:["1P 7m 9M 10m 12d","3m 7m 8P 9M 12d","5d 8P 9M 10m 14m","7m 10m 12d 15P 16M"],"-b6":["1P 5P 6m 8P 10m","1P 5P 8P 10m 13m","3m 5P 8P 10m 13m","5P 8P 10m 13m","5P 8P 10m 13m 15P"],"-#5":["1P 6m 8P 10m 13m","3m 6m 8P 10m 13m","6m 8P 10m 13m 15P"],"7b9":["1P 3M 7m 9m 10M","3M 7m 8P 9m 10M","3M 7m 8P 9m 14m","7m 9m 10M 14m 15P"],"7#9":["1P 3M 7m 10m","3M 7m 8P 10m 14m","7m 10m 10M 14m 15P"],"7#11":["1P 3M 7m 10M 12d","3M 7m 8P 10M 12d","7m 10M 12d 14m 15P"],"7b5":["1P 3M 7m 10M 12d","3M 7m 8P 10M 12d","7m 10M 12d 14m 15P"],"7#5":["1P 3M 7m 10M 13m","3M 7m 8P 10M 13m","3M 7m 8P 13m 14m","7m 10M 13m 14m 15P"],"9#11":["1P 7m 9M 10M 12d","3M 7m 8P 9M 12d","7m 10M 12d 15P 16M"],"9b5":["1P 7m 9M 10M 12d","3M 7m 8P 9M 12d","7m 10M 12d 15P 16M"],"9#5":["1P 7m 9M 10M 13m","3M 7m 9M 10M 13m","3M 7m 9M 13m 14m","7m 10M 13m 14m 16M","7m 10M 13m 16M 17M"],"7b13":["1P 3M 7m 10M 13m","3M 7m 8P 10M 13m","3M 7m 8P 13m 14m","7m 10M 13m 14m 15P"],"7#9#5":["1P 3M 7m 10m 13m","3M 7m 10m 13m 15P","7m 10M 13m 15P 17m"],"7#9b5":["1P 3M 7m 10m 12d","3M 7m 10m 12d 15P","7m 10M 12d 15P 17m"],"7#9#11":["1P 3M 7m 10m 12d","3M 7m 10m 12d 15P","7m 10M 12d 15P 17m"],"7b9#11":["1P 7m 9m 10M 12d","3M 7m 8P 9m 12d","7m 8P 10M 12d 16m"],"7b9b5":["1P 7m 9m 10M 12d","3M 7m 8P 9m 12d","7m 8P 10M 12d 16m"],"7b9#5":["1P 7m 9m 10M 13m","3M 7m 8P 9m 13m","7m 9m 10M 13m 15P"],"7b9#9":["1P 3M 7m 9m 10m","3M 7m 8P 9m 10m","7m 8P 10M 16m 17m"],"7b9b13":["1P 7m 9m 10M 13m","3M 7m 8P 9m 13m","7m 9m 10M 13m 15P"],"7alt":["3M 7m 8P 9m 12d","1P 7m 10m 10M 13m","3M 7m 8P 10m 13m","3M 7m 9m 12d 15P","3M 7m 10m 13m 15P","7m 10M 12d 15P 17m","7m 10M 13m 15P 17m"],"13#11":["1P 6M 7m 10M 12d","3M 7m 9M 12d 13M","7m 10M 12d 13M 16M"],"13b9":["1P 3M 6M 7m 9m","1P 6M 7m 9m 10M","3M 7m 9m 10M 13M","3M 7m 10M 13M 16m","7m 10M 13M 16m 17M"],"13#9":["1P 3M 6M 7m 10m","3M 7m 8P 10m 13M","7m 10M 13M 14m 17m"],"7b9sus":["1P 5P 7m 9m 11P","5P 7m 8P 9m 11P","7m 8P 11P 14m 16m"],"7susadd3":["1P 4P 5P 7m 10M","5P 8P 10M 11P 14m","7m 11P 12P 15P 17M"],"9sus":["1P 5P 7m 9M 11P","5P 7m 8P 9M 11P","7m 8P 9M 11P 12P","7m 8P 11P 12P 16M"],"13sus":["1P 4P 6M 7m 9M","1P 7m 9M 11P 13M","5P 7m 9M 11P 13M","7m 9M 11P 13M 15P"],"7b13sus":["1P 5P 7m 11P 13m","5P 7m 8P 11P 13m","7m 11P 13m 14m 15P"]},j={2:["1P 5P 6M 8P 9M","1P 5P 8P 9M 12P","5P 8P 9M 12P 13M","5P 8P 9M 12P 15P"],5:["1P 5P 8P 12P","1P 5P 8P 9M 12P","5P 8P 12P 15P","5P 8P 12P 15P 16M"],6:["1P 5P 6M 9M 10M","1P 5P 9M 10M 13M","3M 5P 9M 10M 13M","5P 8P 9M 10M 13M","3M 6M 9M 12P 15P"],7:["1P 5P 7m 8P 10M","1P 7m 8P 10M 12P","3M 7m 8P 10M 12P","3M 7m 8P 10M 14m","3M 7m 10M 12P 15P","7m 10M 12P 14m 15P","7m 10M 12P 15P 17M","7m 10M 14m 17M 19P"],9:["1P 6M 7m 9M 10M","3M 7m 9M 10M 12P","1P 7m 9M 10M 13M","3M 7m 9M 10M 13M","3M 7m 9M 12P 15P","7m 10M 12P 13M 16M","7m 10M 13M 16M 17M","7m 10M 13M 16M 19P"],11:["1P 4P 6M 7m 9M","1P 5P 7m 9M 11P","4P 6M 7m 9M 11P","5P 8P 9M 11P 14m","7m 9M 11P 13M 15P","7m 11P 12P 14m 18P"],13:["3M 7m 9M 10M 13M","3M 7m 9M 13M 15P","3M 7m 10M 13M 16M","7m 10M 12P 13M 16M","7m 10M 13M 16M 17M","7m 10M 13M 16M 19P"],69:["1P 5P 6M 9M 10M","1P 5P 9M 10M 13M","3M 5P 9M 10M 13M","5P 8P 9M 10M 13M","3M 6M 9M 12P 15P"],add9:["1P 5P 8P 9M 10M","1P 5P 9M 10M 12P","3M 8P 9M 10M 12P","3M 8P 9M 12P 15P","5P 8P 9M 10M 15P","5P 8P 9M 12P 17M"],"+":["1P 6m 8P 9M 10M","1P 6m 8P 10M 13m","3M 8P 9M 10M 13m","3M 8P 10M 13m 15P","6m 10M 13m 15P 16M","6m 10M 13m 15P 17M"],o:["1P 6M 8P 10m 12d","1P 6M 10m 12d 13M","3m 8P 10m 12d 13M","3m 8P 12d 13M 15P","5d 10m 12d 13M 15P","5d 10m 13M 15P 17m","6M 12d 13M 15P 17m","6M 12d 15P 17m 19d"],h:["1P 5d 7m 10m 11P","3m 5d 7m 8P 11P","5d 7m 8P 10m 11P","1P 7m 10m 12d","3m 7m 8P 12d 14m","5d 8P 10m 11P 14m","7m 10m 11P 12d 14m","7m 10m 12d 14m 15P","5d 8P 10m 14m 17m"],sus:["1P 4P 5P 8P 9M","1P 4P 5P 8P 11P","1P 5P 8P 9M 11P","5P 8P 9M 11P 12P","5P 8P 11P 12P 13M","5P 8P 11P 13M 15P"],"^":["1P 3M 5P 6M 9M","1P 5P 8P 10M 12P","3M 5P 9M 10M 12P","1P 5P 8P 10M 13M","3M 8P 10M 13M 15P","5P 9M 10M 12P 15P"],"-":["1P 3m 5P 8P 10m","1P 3m 5P 9M 11P","3m 5P 8P 9M 11P","5P 8P 9M 10m 11P","1P 5P 9M 10m 12P","3m 5P 8P 10m 12P","5P 8P 10m 12P 15P"],"^7":["1P 6M 7M 9M 10M","3M 7M 9M 10M 12P","1P 7M 9M 10M 13M","3M 7M 9M 10M 13M","3M 7M 9M 12P 13M","3M 7M 9M 13M 14M","3M 7M 10M 13M 16M","7M 10M 13M 14M 16M","7M 10M 13M 16M 17M","7M 10M 13M 16M 19P"],"-7":["1P 3m 5P 7m 9M","1P 3m 5P 7m 10m","1P 5P 7m 10m 11P","3m 7m 8P 10m 11P","1P 5P 7m 10m 12P","3m 7m 9M 10m 12P","3m 7m 8P 10m 14m","5P 7m 9M 10m 14m","7m 10m 11P 14m 15P","7m 10m 12P 15P 16M","5P 8P 11P 14m 17m","7m 10m 12P 15P 17m"],"7sus":["1P 4P 6M 7m 9M","1P 5P 7m 9M 11P","4P 6M 7m 9M 11P","5P 8P 9M 11P 14m","7m 9M 11P 13M 15P","7m 11P 12P 14m 18P"],h7:["1P 5d 7m 10m 11P","3m 5d 7m 8P 11P","5d 7m 8P 10m 11P","1P 7m 10m 12d","3m 7m 8P 10m 12d","3m 7m 8P 12d 14m","5d 8P 10m 11P 14m","7m 10m 11P 12d 14m","7m 10m 12d 14m 15P","5d 8P 10m 14m 17m"],o7:["1P 6M 8P 10m 12d","1P 6M 10m 12d 13M","3m 8P 10m 12d 13M","3m 8P 12d 13M 15P","5d 10m 12d 13M 15P","5d 10m 13M 15P 17m","6M 12d 13M 15P 17m","6M 12d 15P 17m 19d"],"^9":["1P 6M 7M 9M 10M","1P 7M 9M 10M 13M","3M 7M 9M 10M 13M","3M 7M 9M 12P 13M","3M 7M 8P 9M 13M","3M 7M 9M 13M 14M","3M 7M 10M 13M 16M","7M 10M 13M 14M 16M","7M 10M 13M 16M 17M","7M 10M 13M 16M 19P"],"^13":["1P 6M 7M 9M 10M","1P 7M 9M 10M 13M","3M 7M 9M 12P 13M","3M 7M 9M 10M 13M","3M 7M 8P 9M 13M","3M 7M 9M 13M 14M","3M 7M 10M 13M 16M","7M 10M 13M 14M 16M","7M 10M 13M 16M 17M","7M 10M 13M 16M 19P"],"^7#11":["1P 3M 5d 7M 9M","1P 7M 9M 10M 12d","3M 7M 9M 10M 12d","3M 7M 9M 12d 13M","3M 7M 10M 12d 14M","7M 10M 12d 13M 14M","7M 10M 12d 13M 16M","7M 10M 12d 14M 17M"],"^9#11":["1P 3M 5d 7M 9M","1P 7M 9M 10M 12d","3M 7M 9M 10M 12d","3M 7M 9M 12d 13M","3M 7M 9M 12d 14M","7M 10M 12d 14M 16M","7M 10M 12d 13M 16M"],"^7#5":["1P 6m 7M 10M 13m","3M 7M 9M 10M 13m","3M 7M 10M 13m 14M","7M 10M 13m 14M 16M","7M 10M 13m 14M 17M"],"-6":["1P 3m 5P 6M 9M","3m 5P 6M 8P 9M","1P 5P 6M 10m 11P","3m 5P 6M 8P 11P","1P 5P 9M 10m 13M","3m 5P 8P 9M 13M","5P 8P 10m 11P 13M","5P 8P 10m 13M 16M"],"-69":["1P 3m 5P 6M 9M","3m 5P 6M 8P 9M","3m 6M 9M 10m 12P","1P 5P 9M 10m 13M","3m 5P 8P 9M 13M","5P 8P 9M 10m 13M","5P 8P 10m 13M 16M"],"-^7":["1P 3m 5P 7M 9M","1P 5P 7M 10m 11P","3m 7M 9M 10m 11P","3m 7M 9M 10m 12P","3m 7M 9M 12P 14M","7M 10m 11P 12P 14M","7M 10m 12P 14M 16M"],"-^9":["1P 3m 5P 7M 9M","1P 5P 7M 10m 11P","3m 7M 9M 10m 11P","3m 7M 9M 10m 12P","3m 7M 9M 12P 14M","7M 10m 11P 12P 14M","7M 10m 12P 14M 16M"],"-9":["1P 3m 5P 7m 9M","1P 3m 7m 9M 11P","3m 7m 9M 10m 11P","3m 7m 9M 10m 12P","3m 7m 9M 10m 14m","3m 7m 9M 12P 15P","7m 10m 11P 14m 16M","7m 10m 12P 16M 18P"],"-add9":["1P 2M 3m 5P 8P","1P 3m 5P 9M","3m 5P 8P 9M 12P","5P 8P 9M 10m 12P"],"-11":["3m 5P 7m 9M 11P","7m 9M 10m 11P","1P 4P 7m 10m 12P","3m 7m 9M 11P 12P","7m 9M 10m 11P 12P","3m 7m 9M 11P 14m","4P 10m 12P 14m","5P 8P 11P 14m","5P 8P 11P 14m 16M","7m 10m 12P 16M 18P","7m 10m 11P 16M 21m"],"-7b5":["1P 5d 7m 10m 11P","3m 5d 7m 8P 11P","5d 7m 8P 10m 11P","1P 7m 10m 12d","3m 7m 8P 10m 12d","3m 7m 8P 12d 14m","5d 8P 10m 11P 14m","7m 10m 11P 12d 14m","7m 10m 12d 14m 15P","5d 8P 10m 14m 17m"],h9:["3m 5d 7m 9M 11P","1P 7m 9M 10m 12d","3m 7m 9M 12d 14m","5d 8P 9M 10m 14m","7m 10m 11P 12d 14m","7m 10m 12d 14m 16M"],"-b6":["1P 3m 5P 6m 8P","3m 5P 8P 11P 13m","5P 8P 10m 11P 13m"],"-#5":["1P 6m 8P 10m 13m","3m 6m 8P 11P 13m","6m 8P 10m 13m 15P"],"7b9":["1P 3M 7m 9m 10M","3M 7m 8P 9m 10M","3M 7m 8P 9m 14m","7m 9m 10M 14m 15P"],"7#9":["1P 3M 7m 10m","3M 7m 10m 10M 12P","3M 7m 10m 12P 14m","7m 10M 12P 14m 17m"],"7#11":["1P 3M 7m 9M 12d","3M 7m 9M 12d 13M","7m 10M 12d 13M 16M"],"7b5":["1P 3M 7m 9M 12d","3M 7m 9M 12d 13M","7m 10M 12d 13M 16M"],"7#5":["1P 3M 7m 10M 13m","3M 7m 8P 10M 13m","3M 7m 8P 13m 14m","7m 10M 13m 14m 15P","7m 10M 13m 14m 17M"],"9#11":["1P 7m 9M 10M 12d","3M 7m 8P 9M 12d","7m 10M 12d 15P 16M"],"9b5":["1P 7m 9M 10M 12d","3M 7m 8P 9M 12d","7m 10M 12d 15P 16M"],"9#5":["1P 7m 9M 10M 13m","3M 7m 9M 10M 13m","3M 7m 9M 13m 14m","7m 10M 13m 14m 16M","7m 10M 13m 16M 17M"],"7b13":["1P 3M 7m 10M 13m","3M 7m 8P 10M 13m","3M 7m 8P 13m 14m","7m 10M 13m 14m 15P","7m 10M 13m 14m 17M"],"7#9#5":["3M 7m 10m 10M 13m","3M 7m 10m 13m 14m","7m 10M 13m 14m 17m"],"7#9b5":["3M 7m 10m 10M 12d","3M 7m 10m 12d 14m","7m 10M 12d 14m 17m"],"7#9#11":["3M 7m 10m 10M 12d","3M 7m 10m 12d 14m","7m 10M 12d 14m 17m"],"7b9#11":["3M 7m 9m 10M 12d","3M 7m 9m 12d 14m","7m 8P 10M 12d 16m","7m 10M 12d 14m 16m"],"7b9b5":["3M 7m 9m 10M 12d","3M 7m 9m 12d 14m","7m 8P 10M 12d 16m","7m 10M 12d 14m 16m"],"7b9#5":["1P 7m 9m 10M 13m","3M 7m 9m 10M 13m","3M 7m 10M 13m 16m","7m 10M 13m 14m 16m","7m 10M 13m 16m 17M"],"7b9#9":["1P 3M 7m 9m 10m","3M 7m 10m 13m 16m","7m 10M 13m 16m 17m"],"7b9b13":["1P 7m 9m 10M 13m","3M 7m 9m 10M 13m","3M 7m 10M 13m 16m","7m 10M 13m 14m 16m","7m 10M 13m 16m 17M"],"7alt":["3M 7m 8P 10m 13m","3M 7m 9m 12d 13m","3M 7m 9m 10m 13m","3M 7m 10m 13m 14m","3M 7m 9m 12d 14m","3M 7m 10m 13m 15P","3M 7m 10m 13m 16m","7m 10M 12d 14m 16m","7m 10M 12d 13m 16m","7m 10M 13m 15P 17m","7m 10M 13m 16m 17m","7m 10M 13m 16m 19d"],"13#11":["3M 7m 9M 12d 13M","7m 10M 12d 13M 16M"],"13b9":["3M 7m 9m 10M 13M","3M 7m 10M 13M 16m","7m 10M 13M 16m 17M"],"13#9":["3M 7m 10m 10M 13M","7m 10M 13M 14m 17m"],"7b9sus":["1P 5P 7m 9m 11P","5P 7m 8P 9m 11P","7m 8P 11P 14m 16m"],"7susadd3":["1P 4P 5P 7m 10M","5P 8P 10M 11P 14m","7m 11P 12P 15P 17M"],"9sus":["1P 4P 6M 7m 9M","1P 5P 7m 9M 11P","4P 6M 7m 9M 11P","5P 8P 9M 11P 14m","7m 9M 11P 13M 15P","7m 11P 12P 14m 18P"],"13sus":["1P 4P 6M 7m 9M","1P 7m 9M 11P 13M","4P 7m 9M 11P 13M","7m 9M 11P 13M 15P","7m 11P 13M 14m 16M","7m 11P 13M 16M 18P"],"7b13sus":["1P 5P 7m 11P 13m","5P 7m 8P 11P 13m","7m 11P 13m 14m 15P"]},{dictionaryVoicing:yt,minTopNoteDiff:bt}=v1.default||v1,Nt={m7:["3m 5P 7m 9M","7m 9M 10m 12P"],7:["3M 6M 7m 9M","7m 9M 10M 13M"],"^7":["3M 5P 7M 9M","7M 9M 10M 12P"],69:["3M 5P 6A 9M"],m7b5:["3m 5d 7m 8P","7m 8P 10m 12d"],"7b9":["3M 6m 7m 9m","7m 9m 10M 13m"],"7b13":["3M 6m 7m 9m","7m 9m 10M 13m"],o7:["1P 3m 5d 6M","5d 6M 8P 10m"],"7#11":["7m 9M 11A 13A"],"7#9":["3M 7m 9A"],mM7:["3m 5P 7M 9M","7M 9M 10m 12P"],m6:["3m 5P 6M 9M","6M 9M 10m 12P"]},$t={m7:["3m 7m","7m 10m"],m9:["3m 7m","7m 10m"],7:["3M 7m","7m 10M"],"^7":["3M 7M","7M 10M"],"^9":["3M 7M","7M 10M"],69:["3M 6M"],6:["3M 6M","6M 10M"],m7b5:["3m 7m","7m 10m"],"7b9":["3M 7m","7m 10M"],"7b13":["3M 7m","7m 10M"],o7:["3m 6M","6M 10m"],"7#11":["3M 7m","7m 10M"],"7#9":["3M 7m","7m 10M"],mM7:["3m 7M","7M 10m"],m6:["3m 6M","6M 10m"]},At={"":["1P 3M 5P","3M 5P 8P","5P 8P 10M"],M:["1P 3M 5P","3M 5P 8P","5P 8P 10M"],m:["1P 3m 5P","3m 5P 8P","5P 8P 10m"],o:["1P 3m 5d","3m 5d 8P","5d 8P 10m"],aug:["1P 3m 5A","3m 5A 8P","5A 8P 10m"]},_t={"":["1P 3M 5P","3M 5P 8P","5P 8P 10M"],M:["1P 3M 5P","3M 5P 8P","5P 8P 10M"],m:["1P 3m 5P","3m 5P 8P","5P 8P 10m"],o:["1P 3m 5d","3m 5d 8P","5d 8P 10m"],aug:["1P 3m 5A","3m 5A 8P","5A 8P 10m"],m7:["3m 5P 7m 9M","7m 9M 10m 12P"],7:["3M 6M 7m 9M","7m 9M 10M 13M"],"^7":["3M 5P 7M 9M","7M 9M 10M 12P"],69:["3M 5P 6A 9M"],m7b5:["3m 5d 7m 8P","7m 8P 10m 12d"],"7b9":["3M 6m 7m 9m","7m 9m 10M 13m"],"7b13":["3M 6m 7m 9m","7m 9m 10M 13m"],o7:["1P 3m 5d 6M","5d 6M 8P 10m"],"7#11":["7m 9M 11A 13A"],"7#9":["3M 7m 9A"],mM7:["3m 5P 7M 9M","7M 9M 10m 12P"],m6:["3m 5P 6M 9M","6M 9M 10m 12P"]},k={lefthand:{dictionary:Nt,range:["F3","A4"],mode:"below",anchor:"a4"},triads:{dictionary:At,mode:"below",anchor:"a4"},guidetones:{dictionary:$t,mode:"above",anchor:"a4"},default:{dictionary:_t,mode:"below",anchor:"a4"}},It=(m,M)=>wt(m,k[m].dictionary,M),wt=(m,M,t=["F3","A4"])=>{Object.assign(k,{[m]:{dictionary:M,range:t}})},Mm=(m,M,t={})=>{Object.assign(k,{[m]:{dictionary:M,...t}})},Ct=(m,M,t)=>{const{dictionary:P,range:e}=k[M];return yt({chord:m,dictionary:P,range:e,picker:bt,lastVoicing:t})};let X;const Ft=_("voicings",function(m,M){return M.fmap(t=>(X=Ct(t,m,X),j1(...X))).outerJoin()}),zt=_("rootNotes",function(m,M){return M.fmap(t=>{const P=(t.chord||t).match(/^([a-gA-G][b#]?).*$/)[1]+m;return t.chord?{note:P}:P})}),Et=_("voicing",function(m){return m.fmap(M=>{M=typeof M=="string"?{chord:M}:M;let{dictionary:t="default",chord:P,anchor:e,offset:n,mode:r,n:o,octaves:a,...i}=M;t=typeof t=="string"?k[t]:{dictionary:t,mode:"below",anchor:"c5"};try{let s=ht({...t,chord:P,anchor:e,offset:n,mode:r,n:o,octaves:a});return j1(...s).note().set(i)}catch{return W(`[voicing]: unknown chord "${P}"`),Y}}).outerJoin()});function t1(m,M,t){t=Array.isArray(t)?t:[t],t.forEach(P=>{P[M]=P[m]})}t1("^","",[C,j]);Object.keys(C).forEach(m=>{if(m.includes("-")){let M=m.replace("-","m");t1(m,M,[j,C])}if(m.includes("^")){let M=m.replace("^","M");t1(m,M,[j,C])}});Mm("ireal",C);Mm("ireal-ext",j);export{wt as addVoicings,Mm as registerVoicings,zt as rootNotes,Ot as scale,kt as scaleTranspose,It as setVoicingRange,Vt as transpose,Et as voicing,t1 as voicingAlias,k as voicingRegistry,Ft as voicings};
